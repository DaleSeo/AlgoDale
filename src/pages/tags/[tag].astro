---
import { CollectionEntry, getCollection, getEntry } from "astro:content";
import ListLayout from "~/layouts/ListLayout.astro";

interface Props {
  tagName: string;
  articles: CollectionEntry<"problems">[];
}

export async function getStaticPaths() {
  const programs = await getCollection("problems", ({ data }) => !data.draft);
  const algorithms = await getCollection(
    "algorithms",
    ({ data }) => !data.draft
  );
  const dataStructures = await getCollection(
    "data-structures",
    ({ data }) => !data.draft
  );
  const posts = [...programs, ...algorithms, ...dataStructures].sort(
    (a, b) => a.data.date.valueOf() - b.data.date.valueOf()
  );

  const tagIds = [
    ...new Set(
      posts
        .map((post) => post.data.tags)
        .filter(Boolean)
        .flat()
    ),
  ];

  return await Promise.all(
    tagIds.map(async (tagId) => {
      const tag = await getEntry("tags", tagId);
      const tagName = tag ? tag.data.name : tagId;

      const articles = posts
        .filter(({ data: { tags } }) => tags.includes(tagId))
        .map(({ collection, slug, data: { title, tags } }) => ({
          href: `/${collection}/${slug}`,
          slug,
          title,
          tags,
        }));

      return {
        params: { tag: tagId },
        props: { tagName, articles },
      };
    })
  );
}

const { tagName, articles } = Astro.props;
---

<ListLayout icon="tag" title={`${tagName} 관련 글`} articles={articles} />
