---
import { CollectionEntry, getCollection } from "astro:content";
import ListLayout from "~/layouts/ListLayout.astro";

interface Props {
  articles: CollectionEntry<"problems">[];
}

export async function getStaticPaths() {
  const programs = await getCollection("problems");
  const algorithms = await getCollection("algorithms");
  const dataStructures = await getCollection("data-structures");
  const posts = [...programs, ...algorithms, ...dataStructures];

  const uniqueTags = [
    ...new Set(
    posts
        .map((post) => post.data.tags)
        .filter(Boolean)
        .flat()
    ),
  ].filter((tag) => tag);

  return uniqueTags.map((tag) => {
    const filteredPosts = posts
      .filter((post) => post.data.tags?.includes(tag))
      .filter((post) => !post.data.draft)
      .sort((a, b) => a.data.date.valueOf() - b.data.date.valueOf())
      .map(({ collection, slug, data: { title, tags } }) => ({
        href: `/${collection}/${slug}`,
        slug,
        title,
        tags,
      }));
    return {
      params: { tag },
      props: { articles: filteredPosts },
    };
  });
}

const { tag } = Astro.params;
const { articles } = Astro.props;
---

<ListLayout title={`${tag} 관련 포스팅`} articles={articles} />
