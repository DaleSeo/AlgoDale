---
import { CollectionEntry, getCollection } from "astro:content";
import BaseHead from "../../components/BaseHead.astro";
import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../../consts";
import FormattedDate from "../../components/FormattedDate.astro";

interface Props {
  posts: CollectionEntry<"problems">[];
}

export async function getStaticPaths() {
  const allPosts = await getCollection("problems");
  const uniqueTags = [
    ...new Set(allPosts.map((post) => post.data.tags).flat()),
  ];

  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) =>
      post.data.tags.includes(tag)
    );
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

const { tag } = Astro.params;
const { posts } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
    <style>
      ul {
        list-style-type: none;
        padding: unset;
      }
      ul li {
        display: flex;
      }
      ul li :global(time) {
        flex: 0 0 130px;
        font-style: italic;
        color: #595959;
      }
      ul li a:visited {
        color: #8e32dc;
      }
    </style>
  </head>
  <body>
    <Header />
    <main>
      <p>Posts tagged with {tag}</p>
      <section>
        <ul>
          {
            posts.map((post) => (
              <li>
                <FormattedDate date={post.data.date} />
                <a href={`/problems/${post.slug}/`}>{post.data.title}</a>
              </li>
            ))
          }
        </ul>
      </section>
    </main>
    <Footer />
  </body>
</html>
